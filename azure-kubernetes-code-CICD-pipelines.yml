
trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:

# Stage 1
# Build the docker image
# Get the k8s configuration file
# Deploy to the K8s cluster
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'in28min-docker-hub'
        repository: 'in28min/currency-exchange-devops'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'manifest'
        publishLocation: 'Container'
  
    stage: Deploy
    displayName: Deploy image
    jobs:  
    - job: Deploy
      displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifest'
          itemPattern: '**/*.yaml'
          targetPath: '$(System.ArtifactDirectory)'\
      Settings
          - task: KubernetesManifest@0
          inputs:
            action: 'deploy'
            kubernetesServiceConnection: 'azure-Kubernetes-connection'
            namespace: 'default'
            manifests: '$(System.ArtifactDirectory)/configuration/kubernetes//deployment.yaml'
            containers: 'in28min/currency-exchange-devops:$(tag)'

      -
# Stage2 :
# Download the Kubernetes files
# Deploy to kubernetes cluster with Docker image


